apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.github.ben-manes.versions'
//gradle dependencyUpdates -Drevision=release

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionName "2.5.16"
        versionCode 25160
        resValue "string", "app_git_hash", getCurrentGitHash()
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        playStore
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            buildConfigField "String", "CLIENT_ID", "\"" + getGHId(false) + "\""
            buildConfigField "String", "CLIENT_SECRET", "\"" + getGHSecret(false) + "\""
            buildConfigField "String", "CLIENT_CALLBACK", "\"" + getGHCallback(false) + "\""
            buildConfigField "String", "GH_GITSKARIOS_ACCOUNT_TOKEN", "null"
        }
        release {
            minifyEnabled false
            if (signingConfigs.playStore != null) {
                signingConfig signingConfigs.playStore
            }
            buildConfigField "String", "CLIENT_ID", "\"" + getGHId(true) + "\""
            buildConfigField "String", "CLIENT_SECRET", "\"" + getGHSecret(true) + "\""
            buildConfigField "String", "CLIENT_CALLBACK", "\"" + getGHCallback(true) + "\""
            buildConfigField "String", "GH_GITSKARIOS_ACCOUNT_TOKEN", "null"
            ext.betaDistributionGroupAliases="gitskarios-alpha-testers"
        }
        cloudtest {
            minifyEnabled false
            if (signingConfigs.playStore != null) {
                signingConfig signingConfigs.playStore
            }
            buildConfigField "String", "CLIENT_ID", "\"" + getGHId(false) + "\""
            buildConfigField "String", "CLIENT_SECRET", "\"" + getGHSecret(false) + "\""
            buildConfigField "String", "CLIENT_CALLBACK", "\"" + getGHCallback(false) + "\""
            buildConfigField "String", "GH_GITSKARIOS_ACCOUNT_TOKEN", "\"" + getGHCustomToken(true) + "\""
        }
    }
}

def getCurrentGitHash() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

def Properties props = new Properties()
def propFile = file('../signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('SIGN_FILE') && props.containsKey('SIGN_KEYSTORE_PASS') &&
            props.containsKey('SIGN_KEYSTORE_ALIAS') && props.containsKey('SIGN_KEYSTORE_ALIAS_PASS')) {

        println 'RELEASE BUILD SIGNING'

        android.signingConfigs.playStore.storeFile = file(props['SIGN_FILE'])
        android.signingConfigs.playStore.storePassword = props['SIGN_KEYSTORE_PASS']
        android.signingConfigs.playStore.keyAlias = props['SIGN_KEYSTORE_ALIAS']
        android.signingConfigs.playStore.keyPassword = props['SIGN_KEYSTORE_ALIAS_PASS']
    } else {
        println 'RELEASE BUILD NOT FOUND SIGNING PROPERTIES'

        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'RELEASE BUILD NOT FOUND SIGNING FILE'
    android.buildTypes.release.signingConfig = null
}

def getGHId(pro) {
    if (pro) {
        return hasProperty('GH_PRO_ID') ? GH_PRO_ID : System.getenv('GH_PRO_ID')
    } else {
        return hasProperty('GH_DEV_ID') ? GH_DEV_ID : System.getenv('GH_DEV_ID')
    }
}

def getGHSecret(pro) {
    if (pro) {
        return hasProperty('GH_PRO_SECRET') ? GH_PRO_SECRET : System.getenv('GH_PRO_SECRET')
    } else {
        return hasProperty('GH_DEV_SECRET') ? GH_DEV_SECRET : System.getenv('GH_DEV_SECRET')
    }
}

def getGHCallback(pro) {
    if (pro) {
        return hasProperty('GH_PRO_CALLBACK') ? GH_PRO_CALLBACK : System.getenv('GH_PRO_CALLBACK')
    } else {
        return hasProperty('GH_DEV_CALLBACK') ? GH_DEV_CALLBACK : System.getenv('GH_DEV_CALLBACK')
    }
}

def getGHCustomToken(pro) {
    if (pro) {
        return hasProperty('GH_GITSKARIOS_ACCOUNT_TOKEN') ? GH_GITSKARIOS_ACCOUNT_TOKEN : System.getenv('GH_GITSKARIOS_ACCOUNT_TOKEN')
    } else {
        return hasProperty('GH_GITSKARIOS_ACCOUNT_TOKEN') ? GH_GITSKARIOS_ACCOUNT_TOKEN : System.getenv('GH_GITSKARIOS_ACCOUNT_TOKEN')
    }
}

assembleRelease.dependsOn clean
assembleRelease.doLast {
    tasks.crashlyticsUploadDistributionRelease.execute()
}

dependencies {
    debugCompile project(path: ':sdks:GithubAndroidSdk', configuration: 'debug')
    releaseCompile project(path: ':sdks:GithubAndroidSdk', configuration: 'release')
    cloudtestCompile project(path: ':sdks:GithubAndroidSdk', configuration: 'release')
    // Submodules

    compile project(':libraries:breadcrumbs')
    compile project(':libraries:atelier')
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }
    compile 'com.github.xiprox.errorview:library:2.2.0'
    compile 'com.android.support:design:23.0.1'
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:palette-v7:23.0.1'
    compile 'com.android.support:recyclerview-v7:23.0.1'
    compile 'com.android.support:cardview-v7:23.0.1'
    compile 'com.google.android.gms:play-services-analytics:7.8.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
    compile 'se.emilsjolander:stickylistheaders:2.7.0'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'org.ocpsoft.prettytime:prettytime:4.0.0.Final'

    compile('com.mikepenz:aboutlibraries:5.2.2@aar') {
        transitive = true
    }
    compile('com.mikepenz:materialdrawer:4.0.8@aar') {
        transitive = true
    }
    compile('com.mikepenz:actionitembadge:3.1.1@aar')
    compile 'com.mikepenz:octicons-typeface:3.0.1@aar'
    compile 'com.mikepenz:google-material-typeface:1.2.0@aar'

    compile 'com.github.d-max:spots-dialog:0.4'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.wefika:flowlayout:0.4.0'
    compile 'com.github.alorma:diff-textview:1.1.0'
    compile 'com.github.gabrielemariotti.changeloglib:changelog:2.0.0'
    compile 'io.realm:realm-android:0.82.2'
    compile 'com.timehop.stickyheadersrecyclerview:library:0.4.2@aar'

    compile 'com.afollestad:material-cab:0.1.4'
    compile 'com.afollestad:material-dialogs:0.7.9.1'

    compile 'com.github.pedrovgs:renderers:2.0.3'
    compile 'com.jakewharton:butterknife:7.0.1'

    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

}
